/* Add margin bottom and top to each widgets */
.component {
    margin-bottom: 3px;
    margin-top: 3px;
}

h1 {
    margin-bottom: 50px;
}

/* Set cursor to pointer on table with selectable rows */
.table-hover tr {
    cursor: pointer;
}

/* Set a red border to invalid input fields in forms */
input[type='text'].ng-invalid.ng-dirty, input[type='email'].ng-invalid.ng-dirty,
input[type='number'].ng-invalid.ng-dirty, input[type='password'].ng-invalid.ng-dirty {
  border-color: #C00;
  border-width: 1px;
}

/* Add a red star after required inputs */
.control-label--required:after {
  content: " *";
  color: #C00;
}
.btn-invalid {
    border-color: #C00;
    border-width: 1px;
}

.text-upperCase {
    text-transform: uppercase;
}

.bonita-modal {
    overflow-y: auto;
}

.modal-open .datepicker,
.modal-open .timepicker {
    z-index: 9999;
}

/* Custom css */

.pl-0.component {
    padding-left: 0;
}

.pr-0.component {
    padding-right: 0;
}

.pt-0.component,
.pt-0 a {
    padding-top: 0;
}

.pt-5.component {
    padding-top: 5px;
}

.pb-0.component {
    padding-bottom: 0;
}

.pb-20 {
    padding-bottom: 20px;
}

.mb-0.component {
    margin-bottom: 0;
}

.ml-0.component {
    margin-left: 0;
}

.mr-0.component {
    margin-right: 0;
}

.mt-0.component {
    margin-top: 0;
}

.mt-5 {
    margin-top: 5px;
}

.mt-20 {
    margin-top: 20px;
}

.process-variable-item {
    border-bottom: 1px solid lightgray;
    overflow: hidden;
    transition: 0.3s;
    padding-top: 0.5rem;
}

.process-variable-item p  {
    margin-bottom: 0;
}

.item-label p,
.item-label.component {
    font-size: 11px;
    opacity: 0.7;
    margin: 0;
    padding-right: 0;
    word-wrap: break-word;
    word-break: break-word;
}

.item-value,
.item-value a,
.item-value p {
    font-size: 12px;
    margin: 0 0 3px 0;
    padding-right: 0;
    word-wrap: break-word;
    word-break: break-word;
}

.item-value a {
    padding: 0;
}

.item-value.capitalize-first-letter p:first-letter {
    text-transform: uppercase;
}

.comments {
    margin-bottom: 10px;
    border-bottom: 1px solid #ddd;
    padding-left: 0;
}

.comments p {
    margin: 0 0 5px 10px;
}

.process-variable-value p {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    max-height: 15px;
}

.process-variable-value p:hover {
    overflow: visible;
    text-overflow: unset;
    max-height: 100%;
    white-space: inherit;

}

/* Spinner */
.gly-spin {
    -webkit-animation: spin 2s infinite linear;
    -moz-animation: spin 2s infinite linear;
    -o-animation: spin 2s infinite linear;
    animation: spin 2s infinite linear;
}

@keyframes spin{
    0%{
        -webkit-transform: rotate(0deg);
        -ms-transform: rotate(0deg);
        -o-transform: rotate(0deg);
        transform: rotate(0deg);
    }

    100%{
        -webkit-transform: rotate(360deg);
        -ms-transform: rotate(360deg);
        -o-transform: rotate(360deg);
        transform: rotate(360deg);
    }
}