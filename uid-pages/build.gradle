def parentProject = project
subprojects { subProject ->
    if (file("cypress.json").exists()){
        apply plugin: 'com.github.node-gradle.node'

        node {
            download = true
            version = Versions.nodeVersion
            npmVersion = Versions.npmVersion
        }

        task unzip(type: Copy) {
            dependsOn('buildUIDPage')
            def zipFile = file("${buildDir}/${project.name}-${project.version}.zip")
            def outputDir = file("${buildDir}/dist")

            from zipTree(zipFile)
            into outputDir
        }

        subProject.task([dependsOn: [unzip, subProject.tasks.npm_install], type: NpmTask],"openTest") {
            workingDir = parentProject.projectDir
            args = ['run', 'open', '--', '--project', subProject.name]
            group 'ui designer'
        }

        subProject.task([dependsOn: [unzip, subProject.tasks.npm_install], type: NpmTask],"runTest") {
            workingDir = parentProject.projectDir
            args = ['test', '--', '--project', subProject.name]
            environment = [LANG: 'en_EN.UTF-8']
            group 'Bonita'
        }
    }

    apply plugin: 'com.bonitasoft.gradle.bonita-uid-page'
    apply plugin: 'com.bonitasoft.gradle.bonita-uid-page-crowdin'
    publishToMavenLocal.dependsOn buildUIDPage

    publishing {
        publications {
            create('zip', MavenPublication) { artifact file("${project.buildDir}/${project.name}-${project.version}.zip") }
        }
    }
}
